{"ast":null,"code":"var _jsxFileName = \"/Users/outstandingboy/workspace/projects/orange/size-table-generator/src/SizeCalculator.js\";\nimport React, { useState } from 'react';\nimport './SizeCalculator.css';\n\nfunction SizeCalculator() {\n  const [sizes, setSizes] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [addSize, setAddSize] = useState(true);\n  const [addType, setAddType] = useState(true);\n  const [temp, setTemp] = useState(-1);\n  const [defSize, setDefSize] = useState({});\n  const [delSize, setDelSize] = useState({});\n\n  const onAddSize = () => {\n    if (addSize) {\n      if (temp != -1) {\n        if (temp.includes('~')) {\n          const [from, to] = temp.split('~');\n          console.log(from);\n          console.log(to);\n\n          for (let i = parseInt(from); i <= parseInt(to); i += 10) {\n            console.log(i);\n            sizes.push(i);\n          }\n        } else sizes.push(temp);\n      }\n\n      setAddSize(false);\n    } else {\n      setAddSize(true);\n      setTemp(-1);\n    }\n  };\n\n  const onAddType = () => {\n    if (addType) {\n      if (temp != -1) {\n        if (temp.includes(',')) {\n          const ts = temp.split(',');\n\n          for (const type of ts) {\n            types.push(type);\n            defSize[type] = 0;\n            delSize[type] = 0;\n          }\n        } else {\n          types.push(temp);\n          defSize[temp] = 0;\n          delSize[temp] = 0;\n        }\n      }\n\n      setAddType(false);\n    } else {\n      setAddType(true);\n      setTemp(-1);\n    }\n  };\n\n  const onInputSize = e => {\n    setTemp(e.target.value);\n  };\n\n  const onChangeDefSize = type => {\n    return e => {\n      setDefSize({ ...defSize,\n        [type]: e.target.value\n      });\n    };\n  };\n\n  const onChangeDelSize = type => {\n    return e => {\n      setDelSize({ ...delSize,\n        [type]: e.target.value\n      });\n    };\n  };\n\n  const onEnterSize = e => {\n    console.log(e);\n\n    if (e.keyCode == 13) {\n      onAddSize();\n    }\n  };\n\n  const onEnterType = e => {\n    console.log(e);\n\n    if (e.keyCode == 13) {\n      onAddType();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"frame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\uC0AC\\uC774\\uC988\"), types.map(v => {\n    return React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, v);\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, (() => {\n    // if(addType) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: onInputSize,\n      onKeyDown: onEnterType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: onAddType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\uCD94\\uAC00\")); // }\n    // else {\n    //     return <button onClick={onAddType}>추가</button>;\n    // }\n  })())), sizes.map((row, i) => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, row), types.map(v => {\n      return React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, parseFloat(defSize[v]) + parseFloat(delSize[v]) * i);\n    }));\n  }), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, (() => {\n    // if(addSize) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: onInputSize,\n      onKeyDown: onEnterSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: onAddSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"\\uCD94\\uAC00\")); // }\n    // else {\n    //     return <button onClick={onAddSize}>추가</button>;\n    // }\n  })())), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"\\uAE30\\uBCF8\\uC0AC\\uC774\\uC988\"), types.map(v => {\n    return React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: onChangeDefSize(v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"\\uC99D\\uAC00\\uB7C9\"), types.map(v => {\n    return React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: onChangeDelSize(v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  })))));\n}\n\nexport default SizeCalculator;","map":{"version":3,"sources":["/Users/outstandingboy/workspace/projects/orange/size-table-generator/src/SizeCalculator.js"],"names":["React","useState","SizeCalculator","sizes","setSizes","types","setTypes","addSize","setAddSize","addType","setAddType","temp","setTemp","defSize","setDefSize","delSize","setDelSize","onAddSize","includes","from","to","split","console","log","i","parseInt","push","onAddType","ts","type","onInputSize","e","target","value","onChangeDefSize","onChangeDelSize","onEnterSize","keyCode","onEnterType","map","v","row","parseFloat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './SizeCalculator.css';\n\n\nfunction SizeCalculator() {\n    const [sizes, setSizes] = useState([])\n    const [types, setTypes] = useState([])\n\n    const [addSize, setAddSize] = useState(true)\n    const [addType, setAddType] = useState(true)\n\n    const [temp, setTemp] = useState(-1)\n\n    const [defSize, setDefSize] = useState({})\n    const [delSize, setDelSize] = useState({})\n\n    const onAddSize = () => {\n        if(addSize) {\n            if (temp != -1) {\n                if(temp.includes('~')) {\n                    const [from, to] = temp.split('~');\n                    console.log(from)\n                    console.log(to)\n                    for(let i=parseInt(from);i<=parseInt(to);i+=10) {\n                        console.log(i);\n                        sizes.push(i)\n                    }\n                }\n                else \n                    sizes.push(temp)\n            }\n            setAddSize(false);\n        }\n        else {\n            setAddSize(true);\n            setTemp(-1);\n        }\n    }\n\n    const onAddType = () => {\n        if(addType) {\n            if (temp != -1) {\n                if(temp.includes(',')) {\n                    const ts = temp.split(',');\n                    for(const type of ts) {\n                        types.push(type)\n                        defSize[type] = 0;\n                        delSize[type] = 0;\n                    }\n                }\n                else {\n                    types.push(temp)\n                    defSize[temp] = 0;\n                    delSize[temp] = 0;\n                }\n            }\n            setAddType(false);\n        }\n        else {\n            setAddType(true);\n            setTemp(-1);\n        }\n    }\n\n    const onInputSize = (e) => {\n        setTemp(e.target.value);\n    }\n\n    const onChangeDefSize = (type) => {\n        return (e) => {\n            setDefSize({\n                ...defSize,\n                [type]: e.target.value\n            })\n        }\n    }\n\n    const onChangeDelSize = (type) => {\n        return (e) => {\n            setDelSize({\n                ...delSize,\n                [type]: e.target.value\n            })\n        }\n    }\n\n    const onEnterSize = (e) => {\n        console.log(e);\n        if(e.keyCode == 13)\n        {\n            onAddSize();\n        }\n    }\n\n    const onEnterType = (e) => {\n        console.log(e);\n        if(e.keyCode == 13)\n        {\n            onAddType();\n        }\n    }\n    \n    \n    return (\n        <div className=\"frame\">\n            <div>\n                <table>\n                    <tr>\n                        <th>사이즈</th>\n                        {types.map((v) => {return <th>{v}</th>})}\n                        <th>\n                        {(() => {\n                            // if(addType) {\n                                return <div>\n                                    <input onChange={onInputSize} onKeyDown={onEnterType}></input>\n                                    <button onClick={onAddType}>추가</button>\n                                    </div>\n                            // }\n                            // else {\n                            //     return <button onClick={onAddType}>추가</button>;\n                            // }\n                        })()}\n                        </th>\n                    </tr>\n                    {sizes.map((row, i) => {return (\n                        <tr>\n                            <th>{row}</th>\n                            {types.map((v) => {return <th>{parseFloat(defSize[v])+(parseFloat(delSize[v])*(i))}</th>})}\n                        </tr>\n                    )})}\n                    <tr><th>\n                        {(() => {\n                            // if(addSize) {\n                                return <div>\n                                    <input onChange={onInputSize} onKeyDown={onEnterSize}></input>\n                                    <button onClick={onAddSize}>추가</button>\n                                    </div>\n                            // }\n                            // else {\n                            //     return <button onClick={onAddSize}>추가</button>;\n                            // }\n                        })()}</th></tr>\n                    <br/>\n                    <tr>\n                        <th>기본사이즈</th>\n                        {types.map((v) => {return <th><input onChange={onChangeDefSize(v)}></input></th>})}\n                    </tr>\n                    <tr>\n                        <th>증가량</th>\n                        {types.map((v) => {return <th><input onChange={onChangeDelSize(v)}></input></th>})}\n                    </tr>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default SizeCalculator;\n"]},"metadata":{},"sourceType":"module"}